# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"

  config.vm.provision "file", source: "./k8s", destination: "/home/vagrant/k8s"
  config.vm.provision "file", source: "./kong", destination: "/home/vagrant/kong"
  config.vm.provision "file", source: "./ansible", destination: "/home/vagrant/ansible"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  config.vm.network "forwarded_port", guest: 8001, host: 8001, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = "4096"
    vb.cpus = "2"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "ansible/playbooks/setup.yaml"
    ansible.inventory_path = "ansible/inventory/localhost/hosts.yaml"
    ansible.verbose = "v"
    # ansible.user = "vagrant"
    # ansible.private_key_path = "/path/to/your/private/key"
    # ansible.ssh_extra_args = "-o ForwardAgent=yes"
  end
end
